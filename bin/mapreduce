#!/bin/bash

set -Eeuo pipefail

LOG_DIR="var/log"
MANAGER_LOG="$LOG_DIR/manager.log"
WORKER1_LOG="$LOG_DIR/worker-6001.log"
WORKER2_LOG="$LOG_DIR/worker-6002.log"


start_server () {
    if pgrep -f mapreduce-manager &> /dev/null; then
            echo "Error: mapreduce-manager is already running"
            exit 1
        fi
        if pgrep -f mapreduce-worker &> /dev/null; then
            echo "Error: mapreduce-worker is already running"
            exit 1
        fi

    echo "starting mapreduce ..."
    mkdir -p var/log
    rm -f var/log/manager.log var/log/worker-6002.log var/log/worker-6001.log
    mapreduce-manager --host localhost --port 6000 --logfile var/log/manager.log &
    sleep 2  # give the Manager time to start
    mapreduce-worker --host localhost --port 6001 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6001.log &
    mapreduce-worker --host localhost --port 6002 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6002.log &
}

stop_server () {
    mapreduce-submit --shutdown --host localhost --port 6000
    sleep 2  # give the Manager time to receive signal and send to Workers

    if pgrep -f mapreduce-manager &> /dev/null; then
        echo "killing mapreduce manager ..."
        pkill -f mapreduce-manager || true
    fi
    if pgrep -f mapreduce-worker &> /dev/null; then
        echo "killing mapreduce worker ..."
        pkill -f mapreduce-worker || true
    fi
}

status_server () {
    manager_running=0
    worker_running=0

    if pgrep -f mapreduce-manager > /dev/null; then
        echo "manager running"
        manager_running=1
    else
        echo "manager not running"
    fi

    if pgrep -f mapreduce-worker > /dev/null; then
        echo "worker running"
        worker_running=1
    else
        echo "worker not running"
    fi

    # Exit with 0 if both are running, else 1
    if [ $manager_running -eq 1 ] && [ $worker_running -eq 1 ]; then
        exit 0
    else
        exit 1
    fi
}


restart_server() {
    stop_server
    start_server
}


if [ $1 == "start" ]; then
    start_server
elif [ $1 == "stop" ]; then
    stop_server
elif [ $1 == "status" ]; then
    status_server
elif [ $1 == "restart" ]; then
    stop_server
    start_server
fi